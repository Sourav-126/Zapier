// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
  zaps     Zap[]
}

model Zap {
  id        String @id @default(uuid())
  triggerId String

  trigger Trigger?
  actions Action[]
  zapRuns ZapRun[]
  User    User?    @relation(fields: [userId], references: [id])
  userId  Int
}

model Trigger {
  id        String            @id @default(uuid())
  triggerId String
  zapId     String            @unique
  type      AvailableTriggers @relation(fields: [triggerId], references: [id])
  zap       Zap               @relation(fields: [zapId], references: [id])
}

model Action {
  id           String           @id @default(uuid())
  Zap          Zap?             @relation(fields: [zapId], references: [id])
  zapId        String?
  type         AvailableActions @relation(fields: [actionId], references: [id])
  sortingOrder Int              @default(0)

  actionId String
}

model AvailableActions {
  id     String   @id @default(uuid())
  name   String
  image  String
  Action Action[]
}

model AvailableTriggers {
  id    String @id @default(uuid())
  name  String
  image String

  triggers Trigger[]
}

model ZapRun {
  id       String @id @default(uuid())
  zapId    String
  metadata Json
  zap      Zap    @relation(fields: [zapId], references: [id])

  zapRunOutbox zapRunOutbox?
}

model zapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
